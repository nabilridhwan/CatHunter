generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      String         @id @default(cuid())
  email        String         @unique
  name         String
  username     String         @unique
  bio          String?
  location     String?
  Post         Post[]
  PostComments PostComments[]
  PostLike     PostLikes[]

  @@map("user")
}

model Post {
  // Post related fields
  post_id String @id @default(cuid())
  user_id String
  caption String

  // Location
  lat Float
  lng Float

  // Calculated fields on every insert/delete
  likes    Int
  comments Int

  // Date
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  user         User           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  PostComments PostComments[]
  PostLike     PostLikes[]

  @@map("post")
}

model PostComments {
  comment_id String   @id @default(cuid())
  post_id    String
  user_id    String
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  post       Post     @relation(fields: [post_id], references: [post_id], onDelete: Cascade, onUpdate: Cascade)

  @@map("post_comments")
}

model PostLikes {
  reaction_id String   @id @default(cuid())
  post_id     String
  user_id     String
  created_at  DateTime @default(now())
  user        User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  post        Post     @relation(fields: [post_id], references: [post_id], onDelete: Cascade, onUpdate: Cascade)

  @@map("post_reaction")
}
